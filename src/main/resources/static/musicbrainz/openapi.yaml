openapi: 3.0.1
info:
  title: "MusicBrainz API"
  description: "MusicBrainz API"
  version: '0.1'
servers:
  - url: https://musicbrainz.org/ws/2
paths:
  /artist/{mbid}:
    get:
      tags:
        - artist
      summary: Get Artist Information
      description: Returns artist information
      parameters:
        - $ref: '#/components/parameters/Mbid'
        - name: fmt
          in: query
          schema:
            type: string
          example: json
        - name: inc
          in: query
          schema:
            type: string
          example: url-rels
        - name: User-Agent
          in: header
          schema:
            type: string
          example: https://github.com/mrensan/music-meta-service
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'


  /release-group:
    get:
      tags:
        - releaseGroup
      description: Returns release group information about a specific artist
      parameters:
        - name: artist
          in: query
          schema:
            type: string
          example: f27ec8db-af05-4f36-916e-3d57f91ecf5e
        - name: type
          in: query
          schema:
            type: string
          example: album
        - name: fmt
          in: query
          schema:
            type: string
          example: json
        - name: offset
          in: query
          schema:
            type: integer
          example: 0
        - name: limit
          in: query
          schema:
            type: integer
          example: 100
        - name: User-Agent
          in: header
          schema:
            type: string
          example: https://github.com/mrensan/music-meta-service
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseGroup'

  /artist/:
    get:
      tags:
        - queryResponse
      description: Returns list of available artists
      parameters:
        - name: offset
          in: query
          schema:
            type: integer
          example: 0
        - name: limit
          in: query
          schema:
            type: integer
          example: 100
        - name: query
          in: query
          schema:
            type: string
          example: type:person
        - name: fmt
          in: query
          schema:
            type: string
          example: json
        - name: User-Agent
          in: header
          schema:
            type: string
          example: https://github.com/mrensan/music-meta-service
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'

components:
  parameters:
    Mbid:
      in: path
      name: mbid
      required: true
      schema:
        type: string
      description: "mbid of a musicbrainz entity"
      example: "f27ec8db-af05-4f36-916e-3d57f91ecf5e"

  schemas:
    Artist:
      type: object
      properties:
        id:
          type: string
          example: "f27ec8db-af05-4f36-916e-3d57f91ecf5e"
        name:
          type: string
          example: "Michael Jackson"
        gender:
          type: string
          example: Male
        country:
          type: string
          example: US
        disambiguation:
          type: string
          example: "“King of Pop”"

    ReleaseGroup:
      type: object
      properties:
        release-group-offset:
          type: integer
          format: int32
          example: 0
        release-group-count:
          type: integer
          format: int32
          example: 132
        release-groups:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseGroupItem'

    ReleaseGroupItem:
      type: object
      properties:
        id:
          type: string
          example: "01a42a27-50e1-40e1-93d5-24a54b1595d0"
        title:
          type: string
          example: "Bad Live In Yokohama"

    QueryResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        offset:
          type: integer
          format: int32
        artists:
          type: array
          items:
            $ref: '#/components/schemas/Artist'

